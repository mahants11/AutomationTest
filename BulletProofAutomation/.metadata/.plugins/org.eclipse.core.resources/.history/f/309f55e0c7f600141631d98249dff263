package com.BulletProofAutomation.BulletProofAutomation;

import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;

import com.BulletProofAutomation.pageobject.AbstractPage;
import com.BulletProofAutomation.pageobject.FullCastPage;
import com.BulletProofAutomation.pageobject.HomePage;
import com.BulletProofAutomation.pageobject.SearchPage;

import cucumber.api.java.en.Given;
import cucumber.api.java.en.Then;
import cucumber.api.java.en.When;

public class Steps {

	WebDriver driver = new FirefoxDriver();
	AbstractPage abstractPage;
	HomePage homePage;
	SearchPage searchPage;
	FullCastPage fullcastPage;

	@Given("^I am on the IMDB site$")
	public void I_am_on_the_IMDB_site() throws Throwable {
		abstractPage = new AbstractPage(driver);
		abstractPage.navigateHomePage();
	}

	/*@When("^I Enter  in search field$")
	public void I_Enter_in_search_field() throws Throwable {
		homePage.searchText("test");
	}*/
	/*@When("^I Enter  in search field$")
	public void I_Enter_in_search_field() throws Throwable {
	    // Express the Regexp above with the code you wish you had
		System.out.println("test2");
		driver.findElement(By.xpath("//*[@id='navbar-query']")).sendKeys("text");
		Thread.sleep(1000);
	}*/
	/*@When("^I click on  Button$")
	public void I_click_on_Button() throws Throwable {
		homePage.submit();
	}*/

@When("^I Enter \"([^\"]*)\" in search field$")
public void I_Enter_in_search_field(String arg1) throws Throwable {
	driver.findElement(By.xpath("//*[@id='navbar-query']")).sendKeys(arg1);
	Thread.sleep(1000);
}

@When("^I click on  Button$")
public void I_click_on_Button() throws Throwable {
	driver.findElement(By.id("navbar-submit-button")).click();
	Thread.sleep(1000);
}


	/*@When("^I click on \"([^\"]*)\" link$")
	public void I_click_on_link() throws Throwable {
		searchPage.clickFullCastLink();
	}

	@Then("^I check \"([^\"]*)\" message for \"([^\"]*)\"$")
	public void I_check_message_for(String message, String actor)
			throws Throwable {
		fullcastPage.searchText(message, actor);
	}
*/
@When("^I click on \"([^\"]*)\" link$")
public void I_click_on_link(String arg1) throws Throwable {
	driver.findElement(By.linkText(arg1)).click();
	Thread.sleep(1000);
}

@Then("^I check \"([^\"]*)\" message for \"([^\"]*)\"$")
public void I_check_message_for(String arg1, String arg2) throws Throwable {
	/*String castname=driver.findElement(By.xpath
			("//*[contains(text()," + "'"+ arg1 +"'"+ "]/following-sibling::td/a[contains(text()," + "'"+ arg2 + "'"+ ")]")).getTagName();
	*/
	//String castname=driver.findElement(By.xpath(".//*[@id='fullcredits_content']/table[29]")).getText();
	String castname=driver.findElement(By.xpath(".//*[@id='fullcredits_content']/table[contains(text(),'special thanks')]")).getText();
	
	System.out.println(castname);
//driver.findElement(By.xpath("//*[contains(text()," + "'"+ text + "'"+ ")]/preceding-sibling::td/a")
	if(castname =="text")
	{
		System.out.println("Specail thanks against actor is available");
	}
}
	@Then("^I close browser$")
	public void I_close_browser() throws Throwable {
	}

}
